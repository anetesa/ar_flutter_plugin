group 'io.carius.lars.ar_flutter_plugin'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.8.20'
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    // Пространство имен (namespace) обязательно для Android Gradle Plugin 8.0+ и является хорошей практикой
    namespace 'io.carius.lars.ar_flutter_plugin'
    compileSdkVersion 34

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 34
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.google.ar:core:1.41.0"

    // Sceneform больше не поддерживается Google, используем последнюю официальную версию.
    // Для новых функций можно рассмотреть форки от сообщества.
    implementation 'com.google.ar.sceneform:core:1.17.1'
    implementation 'com.google.ar.sceneform:assets:1.17.1'

    implementation 'com.google.android.gms:play-services-auth:21.0.0'
    implementation 'com.google.ar.sceneform.ux:sceneform-ux:1.17.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
}

// Этот блок обеспечивает совместимость со старыми версиями Flutter, которые
// не добавляли зависимости lifecycle автоматически. Он обновлен для использования
// современных артефактов AndroidX.
afterEvaluate {
    def containsEmbeddingDependencies = false
    for (def configuration : configurations.all) {
        for (def dependency : configuration.dependencies) {
            if (dependency.group == 'io.flutter' &&
                    dependency.name.startsWith('flutter_embedding') &&
                    dependency.isTransitive())
            {
                containsEmbeddingDependencies = true
                break
            }
        }
    }
    if (!containsEmbeddingDependencies) {
        android {
            dependencies {
                def lifecycle_version = "2.6.2"
                compileOnly "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
                compileOnly "androidx.lifecycle:lifecycle-common:$lifecycle_version"
                compileOnly "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
            }
        }
    }
}
